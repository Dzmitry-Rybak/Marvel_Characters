{"version":3,"file":"static/js/64.90c78a72.chunk.js","mappings":"8OAmEA,EAzDmB,WACf,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAgDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAuCC,EAAAA,EAAAA,KAAhCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAEjBC,EAAUH,GAAUI,EAAAA,EAAAA,KAACC,EAAAA,EAAO,IAAK,KACjCC,EAAeL,GAAQG,EAAAA,EAAAA,KAACG,EAAAA,EAAY,IAAK,MAE/CC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,IAEH,IAAMA,EAAY,SAACb,GACfH,GAAoB,GACpBS,EAAaN,GACRc,KAAKC,EACd,EAEMA,EAAiB,SAACC,GACpBvB,GAAc,SAAAD,GAAU,SAAAyB,QAAAC,EAAAA,EAAAA,GAAQ1B,IAAU0B,EAAAA,EAAAA,GAAKF,GAAS,IACxDnB,GAAoB,GACpBI,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,GAClC,EAcOmB,EAZc,SAACA,GAClB,OAAOA,EAAMC,KAAI,SAACC,EAAMC,GAAC,OACrBd,EAAAA,EAAAA,KAAA,MAAIe,UAAU,eAAcC,UAC5BC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAV,OAAaI,EAAKO,IAAKJ,SAAA,EAC3BhB,EAAAA,EAAAA,KAAA,OAAKqB,IAAKR,EAAKS,UAAWC,OAA0D,IAAnDV,EAAKS,UAAUE,QAAQ,uBAAgC,CAACC,UAAW,SAAW,KAAMC,IAAKb,EAAKc,MAAOZ,UAAU,sBAChJf,EAAAA,EAAAA,KAAA,OAAKe,UAAU,oBAAmBC,SAAEH,EAAKc,SACzC3B,EAAAA,EAAAA,KAAA,OAAKe,UAAU,qBAAoBC,SAAA,GAAAP,OAAoB,IAAfI,EAAKe,MAAW,GAAAnB,OAAMI,EAAKe,MAAK,KAAM,gBAAe,WAJ/Dd,EAMjC,GAET,CAEee,CAAa7C,GAE5B,OACIgB,EAAAA,EAAAA,KAAA,QAAAgB,UACIC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACxBjB,EACAG,GACDF,EAAAA,EAAAA,KAAA,MAAIe,UAAU,eAAcC,SACvBL,KAELX,EAAAA,EAAAA,KAAA,UAAQe,UAAU,mCACVe,QAAS,kBAAMzB,EAAUb,EAAO,EAChCuC,SAAU3C,EAAiB4B,UAC/BhB,EAAAA,EAAAA,KAAA,OAAKe,UAAU,QAAOC,SAAC,oBAK3C,ECnDA,EAXmB,WAEf,OACIC,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAAhB,SAAA,EACIhB,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,KACVjC,EAAAA,EAAAA,KAACkC,EAAU,MAIvB,C","sources":["components/comicsList/comicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n    const [offset, setOffset] = useState(21);\n    const {loading, error, getAllComics} = useMarvelService();\n\n    const spinner = loading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n\n    useEffect(() => {\n        onRequest();\n    }, [])\n\n    const onRequest = (offset) => {\n        setNewComicsLoading(true)\n        getAllComics(offset)\n            .then(comicsesLoaded)\n    }\n\n    const comicsesLoaded = (newComics) => {\n        setComicsList(comicsList => [...comicsList, ...newComics]);\n        setNewComicsLoading(false)\n        setOffset(offset => offset + 9)\n    }\n\n    const renderComics = (items) => {\n        return items.map((item, i) => (\n            <li className=\"comics__item\" key={i}>\n            <Link to={`/comics/${item.id}`}>\n                <img src={item.thumbnail} style={item.thumbnail.indexOf('image_not_available') !== -1 ? {objectFit: 'unset'} : null} alt={item.title} className=\"comics__item-img\"/>\n                <div className=\"comics__item-name\">{item.title}</div>\n                <div className=\"comics__item-price\">{`${item.price !== 0 ? `${item.price}$` : 'NOT AVAILABLE'} `}</div>\n            </Link>\n        </li>\n        ))\n    } \n\n     const items = renderComics(comicsList);\n\n    return (\n        <main>\n            <div className=\"comics__list\">\n                {spinner}\n                {errorMessage}\n                <ul className=\"comics__grid\">\n                    {items}\n                </ul>\n                <button className=\"button button__main button__long\"\n                        onClick={() => onRequest(offset)}\n                        disabled={newComicsLoading}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        </main>\n    )\n}\n\nexport default ComicsList","import AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/comicsList\";\n\nconst ComicsPage = () => {\n\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n\n}\n\nexport default ComicsPage"],"names":["_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newComicsLoading","setNewComicsLoading","_useState5","_useState6","offset","setOffset","_useMarvelService","useMarvelService","loading","error","getAllComics","spinner","_jsx","Spinner","errorMessage","ErrorMessage","useEffect","onRequest","then","comicsesLoaded","newComics","concat","_toConsumableArray","items","map","item","i","className","children","_jsxs","Link","to","id","src","thumbnail","style","indexOf","objectFit","alt","title","price","renderComics","onClick","disabled","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}