{"version":3,"file":"static/js/718.0ab66092.chunk.js","mappings":"+OA6CMA,EAAO,SAAHC,GAAiB,IAAZC,EAAKD,EAALC,MACJC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,UAAWC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,MAC3D,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACHE,EAAAA,EAAAA,KAAA,QACIC,KAAK,cACLC,QAAO,GAAAC,OAAKb,EAAK,mBACrBU,EAAAA,EAAAA,KAAA,SAAAF,SAAQR,QAEZU,EAAAA,EAAAA,KAAA,OAAKI,IAAKX,EAAWY,IAAKf,EAAOO,UAAU,uBAC3CD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,qBAAoBC,SAAER,KACpCU,EAAAA,EAAAA,KAAA,KAAGH,UAAU,sBAAqBC,SAAEP,KACpCS,EAAAA,EAAAA,KAAA,KAAGH,UAAU,sBAAqBC,SAAEN,KACpCI,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sBAAqBC,SAAA,CAAC,aAAWJ,MAC9CM,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBC,SAAEH,QAE1CK,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,UAAUV,UAAU,qBAAoBC,SAAC,kBAG9D,EAEA,EA1DwB,WACpB,IAAOU,GAAMC,EAAAA,EAAAA,MAAND,GACPE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCrB,EAAKuB,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,GAA+CC,EAAAA,EAAAA,KAAxCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAUJ,EAAVI,WAAYC,EAAQL,EAARK,UAGnCC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,CAACd,IAGJ,IAAMc,EAAc,WAChBH,IACAC,EAASZ,GACJe,KAAKC,EACd,EAEMA,EAAgB,SAACnC,GACnByB,EAASzB,EACb,EAEMoC,EAAeP,GAAQlB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,IAAK,KACzCC,EAAUV,GAAUjB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAO,IAAK,KACjC1B,EAAYe,GAAWC,IAAU7B,EAAiC,MAAxBW,EAAAA,EAAAA,KAACb,EAAI,CAACE,MAAOA,IAE7D,OACIO,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA/B,SAAA,CACK2B,EACAE,EACAzB,IAGb,C","sources":["components/pages/SingleComicPage/SingleComicPage.js"],"sourcesContent":["import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport useMarvelService from '../../../services/MarvelService';\nimport Spinner from '../../spinner/Spinner';\nimport ErrorMessage from '../../errorMessage/ErrorMessage';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n    const {id} = useParams();\n    const [comic, setComic] = useState(null);\n\n    const {loading, error, clearError, getComic} = useMarvelService();\n\n\n    useEffect(() => {\n        updateComic()\n    }, [id])\n\n\n    const updateComic = () => {\n        clearError()\n        getComic(id)\n            .then(onComicLoaded)\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n}\n\nconst View = ({comic}) => {\n    const {title, description, pageCount, thumbnail, language, price} = comic;\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <meta \n                    name=\"description\" \n                    content={`${title} comics book`}/>\n                <title>{title}</title>\n            </Helmet>\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;"],"names":["View","_ref","comic","title","description","pageCount","thumbnail","language","price","_jsxs","className","children","Helmet","_jsx","name","content","concat","src","alt","Link","to","id","useParams","_useState","useState","_useState2","_slicedToArray","setComic","_useMarvelService","useMarvelService","loading","error","clearError","getComic","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","_Fragment"],"sourceRoot":""}