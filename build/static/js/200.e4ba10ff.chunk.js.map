{"version":3,"file":"static/js/200.e4ba10ff.chunk.js","mappings":"iRAiBA,EAbkB,WACd,OACIA,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAUC,IAAI,cACxBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,0BACRC,EAAAA,EAAAA,KAAA,SAAK,kBAG/BA,EAAAA,EAAAA,KAAA,OAAKC,IAAKG,EAAcD,IAAI,oBAGxC,E,8DCuDA,EAzDmB,WACf,IAAAE,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAgDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAuCC,EAAAA,EAAAA,KAAhCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAEjBC,EAAUH,GAAUrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAO,IAAK,KACjCC,EAAeJ,GAAQtB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAY,IAAK,MAE/CC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,IAEH,IAAMA,EAAY,SAACZ,GACfH,GAAoB,GACpBS,EAAaN,GACRa,KAAKC,EACd,EAEMA,EAAiB,SAACC,GACpBtB,GAAc,SAAAD,GAAU,SAAAwB,QAAAC,EAAAA,EAAAA,GAAQzB,IAAUyB,EAAAA,EAAAA,GAAKF,GAAS,IACxDlB,GAAoB,GACpBI,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,GAClC,EAcOkB,EAZc,SAACA,GAClB,OAAOA,EAAMC,KAAI,SAACC,EAAMC,GAAC,OACrBtC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,UAC5BF,EAAAA,EAAAA,MAAC0C,EAAAA,GAAI,CAACC,GAAE,WAAAP,OAAaI,EAAKI,IAAK1C,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKoC,EAAKK,UAAWC,OAA0D,IAAnDN,EAAKK,UAAUE,QAAQ,uBAAgC,CAACC,UAAW,SAAW,KAAM1C,IAAKkC,EAAKS,MAAOhD,UAAU,sBAChJE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAAEsC,EAAKS,SACzC9C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAAA,GAAAkC,OAAoB,IAAfI,EAAKU,MAAW,GAAAd,OAAMI,EAAKU,MAAK,KAAM,gBAAe,WAJ/DT,EAMjC,GAET,CAEeU,CAAavC,GAE5B,OACIT,EAAAA,EAAAA,KAAA,QAAAD,UACIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,CACxByB,EACAE,GACD1B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SACvBoC,KAELnC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mCACVmD,QAAS,kBAAMpB,EAAUZ,EAAO,EAChCiC,SAAUrC,EAAiBd,UAC/BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,oBAK3C,ECtDA,EAXmB,WAEf,OACIF,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAApD,SAAA,EACIC,EAAAA,EAAAA,KAACoD,EAAS,KACVpD,EAAAA,EAAAA,KAACqD,EAAU,MAIvB,C","sources":["components/appBanner/AppBanner.js","components/comicsList/comicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport avantagers from '../../resources/img/Avengers.png';\nimport avantagersLogo from '../../resources/img/Avengers_logo.png';\n\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n    const [offset, setOffset] = useState(21);\n    const {loading, error, getAllComics} = useMarvelService();\n\n    const spinner = loading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n\n    useEffect(() => {\n        onRequest();\n    }, [])\n\n    const onRequest = (offset) => {\n        setNewComicsLoading(true)\n        getAllComics(offset)\n            .then(comicsesLoaded)\n    }\n\n    const comicsesLoaded = (newComics) => {\n        setComicsList(comicsList => [...comicsList, ...newComics]);\n        setNewComicsLoading(false)\n        setOffset(offset => offset + 9)\n    }\n\n    const renderComics = (items) => {\n        return items.map((item, i) => (\n            <li className=\"comics__item\" key={i}>\n            <Link to={`/comics/${item.id}`}>\n                <img src={item.thumbnail} style={item.thumbnail.indexOf('image_not_available') !== -1 ? {objectFit: 'unset'} : null} alt={item.title} className=\"comics__item-img\"/>\n                <div className=\"comics__item-name\">{item.title}</div>\n                <div className=\"comics__item-price\">{`${item.price !== 0 ? `${item.price}$` : 'NOT AVAILABLE'} `}</div>\n            </Link>\n        </li>\n        ))\n    } \n\n     const items = renderComics(comicsList);\n\n    return (\n        <main>\n            <div className=\"comics__list\">\n                {spinner}\n                {errorMessage}\n                <ul className=\"comics__grid\">\n                    {items}\n                </ul>\n                <button className=\"button button__main button__long\"\n                        onClick={() => onRequest(offset)}\n                        disabled={newComicsLoading}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        </main>\n    )\n}\n\nexport default ComicsList","import AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/comicsList\";\n\nconst ComicsPage = () => {\n\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n\n}\n\nexport default ComicsPage"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newComicsLoading","setNewComicsLoading","_useState5","_useState6","offset","setOffset","_useMarvelService","useMarvelService","loading","error","getAllComics","spinner","Spinner","errorMessage","ErrorMessage","useEffect","onRequest","then","comicsesLoaded","newComics","concat","_toConsumableArray","items","map","item","i","Link","to","id","thumbnail","style","indexOf","objectFit","title","price","renderComics","onClick","disabled","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}